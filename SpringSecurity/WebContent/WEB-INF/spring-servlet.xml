<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<context:component-scan base-package="com.yogesh" />
<context:property-placeholder location="classpath:database.properties" />
	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> -->
	<mvc:annotation-driven />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${${db.dbType}.driverClass}" />
		<property name="url" value="${${db.dbType}.connectionUrl}" />
		<property name="username" value="${${db.dbType}.username}" />
		<property name="password" value="${${db.dbType}.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value></value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${${db.dbType}.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${${db.dbType}.autoSchemaUpdate}</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">${${db.dbType}.showSQL}</prop>
			</props>
		</property>
	</bean>
	
	
</beans>
